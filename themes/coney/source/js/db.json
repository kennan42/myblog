{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.2d7529.css","path":"main.2d7529.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.d238ee.js","path":"mobile.d238ee.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.885efe.js","path":"slider.885efe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.2d7529.js","path":"main.2d7529.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.59e68b.eot","path":"fonts/iconfont.59e68b.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b7ae25.ttf","path":"fonts/iconfont.b7ae25.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.ca3627.woff","path":"fonts/iconfont.ca3627.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.dba24b.svg","path":"fonts/iconfont.dba24b.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/zhifubao.png","path":"img/zhifubao.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/head.png","path":"img/head.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1488721909368},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1488721909368},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1488721909368},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1488721909368},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1488721909368},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1488721909368},{"_id":"themes/yilia/README.md","hash":"0becd9c18f9d44fc364788a34a4f3ec82ca7940a","modified":1488721909368},{"_id":"themes/yilia/_config.yml","hash":"02d30b05381a359249a46deb3d94bddc5d5951d9","modified":1488724979591},{"_id":"themes/yilia/package.json","hash":"946b26ae0dff42c590068f0a58ecd326ed059b68","modified":1488721909370},{"_id":"themes/yilia/webpack.config.js","hash":"c4dca5c60822c90359e48fad373be768ae9fb43d","modified":1488721909376},{"_id":"source/_posts/hexo代码高亮和自定义.md","hash":"2571612e1b4d204f74186bc9bc4ba04a7607bc9a","modified":1488723515035},{"_id":"source/_posts/hexo同步到github.md","hash":"e32f1d75b5b38e4eabc148caee850a89ae34205d","modified":1488723838780},{"_id":"source/_posts/hexo自动化.md","hash":"e3e7f9f9e73b04d9d854d5ba54b5504ad2fe308d","modified":1488723726747},{"_id":"source/_posts/hexo配置注意的地方.md","hash":"45fb1b871d9f3a0cd4d7ac1f7ae5c7da61365f08","modified":1488723827818},{"_id":"source/_posts/markdown使用.md","hash":"e9a87162e5ed18617ae6632bddc3b9f7cb8aef4b","modified":1488723805907},{"_id":"source/about/index.md","hash":"acdc82d119c47ba4e0ea9ad46e4242392e47b9ee","modified":1487688055475},{"_id":"source/categories/index.md","hash":"96976841b399ad7e08842493c6ead7c05101ebab","modified":1487689115305},{"_id":"source/tags/index.md","hash":"b5ba6f9e4326c5bf723d7d5d2285cc6f32864922","modified":1487689067612},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488721909361},{"_id":"themes/yilia/.git/config","hash":"45dbf7cad960774e3ebd63f878005463a78e4c69","modified":1488721909361},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488721535031},{"_id":"themes/yilia/.git/index","hash":"00d1bd10d1cecc131c7fc932b4691b70b0b3833f","modified":1488721909376},{"_id":"themes/yilia/.git/packed-refs","hash":"ce0fffa24e8426ff1d3cdd215fc2af90b9c41a37","modified":1488721909356},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1488721909368},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1488721909368},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1488721909368},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1488721909368},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1488721909369},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1488721909369},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1488721909369},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1488721909370},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1488721909370},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1488721909370},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1488721909370},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1488721909370},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1488721909370},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1488721909370},{"_id":"themes/yilia/source/main.2d7529.css","hash":"2eef112e365f9b00664302ba98b517662c75d411","modified":1488721909375},{"_id":"themes/yilia/source/mobile.d238ee.js","hash":"a054884092af1cc5c2c14e5e11a4dac6d9254481","modified":1488721909376},{"_id":"themes/yilia/source/slider.885efe.js","hash":"1f1a6548c6016cc132bf65a1701cc8421a1f8414","modified":1488721909376},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1488721909370},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1488721909374},{"_id":"themes/yilia/source/main.2d7529.js","hash":"988c141a741441812bcf4c408ef530d7a01522f3","modified":1488721909376},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488721535031},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1488721535031},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1488721535031},{"_id":"themes/yilia/.git/logs/HEAD","hash":"5cfa4a1e093fa1e2725e2585355a65ff756782c2","modified":1488721909361},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"143710485f734c5a997e0b1c26192bbba2982bcc","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"aadab85a35042afdcbce768a32bb9121b0ad1831","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"db8c42ab7e339c240b7044896a3987555ea9b5b8","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"8c295469bd1602e9d3bbf2fee81ff84cacb1d701","modified":1488721909370},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"f5e98b6013c968afb867626ed6617cd1cedc3d3a","modified":1488721909370},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1488721909370},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1488721909374},{"_id":"themes/yilia/source/fonts/iconfont.59e68b.eot","hash":"b7f28dc802d6e32281e8fe7930d4dd2022d00717","modified":1488721909374},{"_id":"themes/yilia/source/fonts/iconfont.b7ae25.ttf","hash":"697449e7790edd12e208706ecaa8d5d0eed44cde","modified":1488721909374},{"_id":"themes/yilia/source/fonts/iconfont.ca3627.woff","hash":"cda0ea1dc25dc3d329d7637afe2cd6aec37e351b","modified":1488721909374},{"_id":"themes/yilia/source/fonts/iconfont.dba24b.svg","hash":"3313bf984fbee56b022942a5d19c916b4734fd60","modified":1488721909374},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1488721909374},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1488721909374},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1488721909374},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1488721909374},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1488721909370},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1488721909370},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"b750499d5120f963b683d0c96ac3f345c714e448","modified":1488721909370},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"ce24ab7049be634c17a163e2db39f1f0b1f7c119","modified":1488721909370},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1488721909370},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"b68772aa2b47d0ed89ce95d4e9d3d27931fe885c","modified":1488721909370},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1488721909370},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"5e3feefbbba70d8da0ec2c75db41762dd4762a81","modified":1488721909371},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"d9c1a22a561dc6072833a2f049b3639c0007283d","modified":1488721909371},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1488721909372},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1488721909372},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1488721909372},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1488721909372},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0ce6345a86c44e3fea5a4aa439614541112538f3","modified":1488721909372},{"_id":"themes/yilia/source-src/css/main.scss","hash":"40c055e8360973a75db7c13f3280a4f465f9e5e3","modified":1488721909372},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1488721909372},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"12abb65289eed5391d657b963a20f96a473b1cbd","modified":1488721909372},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1488721909372},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1488721909372},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1488721909372},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1488721909373},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a14f37a57ce7a720a36196f6469d8be955284f8c","modified":1488721909373},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1488721909373},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1488721909373},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"61917c928d09783a3bc8a91503a59ab3a8696e90","modified":1488721909373},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1488721909373},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1488721909373},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1488721909373},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1488721909373},{"_id":"themes/yilia/source-src/js/fix.js","hash":"17be4f27eb8951835c29dafd0f6ba1b18e47cc6b","modified":1488721909373},{"_id":"themes/yilia/source-src/js/main.js","hash":"d665f4cf30450984591bc8ad2348a1baf720d04b","modified":1488721909373},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1488721909373},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1488721909374},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1488721909374},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1488721909374},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1488721909374},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1488721909374},{"_id":"themes/yilia/source/img/zhifubao.png","hash":"6641e227cf58a4987a5aefba3c3de297189d465b","modified":1488723180133},{"_id":"themes/yilia/.git/objects/pack/pack-9cf3aba4e7368b85f801a799a8af2cc6755ab84e.idx","hash":"dbd1613680bd52d8b9b532571b41b083dcf3e23a","modified":1488721909323},{"_id":"themes/yilia/.git/refs/heads/master","hash":"16c9033891e94fe5e58ea0af0d925519a76eb2c1","modified":1488721909361},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1488721909369},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1488721909369},{"_id":"themes/yilia/source/img/head.png","hash":"f1f72c120f968e24ee75202e14ad02d0112f8706","modified":1488722942000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1488721909371},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1488721909371},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1488721909371},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1488721909371},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1488721909371},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"b7f28dc802d6e32281e8fe7930d4dd2022d00717","modified":1488721909371},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"3313bf984fbee56b022942a5d19c916b4734fd60","modified":1488721909372},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"697449e7790edd12e208706ecaa8d5d0eed44cde","modified":1488721909372},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"cda0ea1dc25dc3d329d7637afe2cd6aec37e351b","modified":1488721909372},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1488721909372},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1488721909372},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1488721909372},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"5cfa4a1e093fa1e2725e2585355a65ff756782c2","modified":1488721909361},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488721909361},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"5cfa4a1e093fa1e2725e2585355a65ff756782c2","modified":1488721909361},{"_id":"themes/yilia/.git/objects/pack/pack-9cf3aba4e7368b85f801a799a8af2cc6755ab84e.pack","hash":"b1b64a710e09ed260b4ea2a4c4655e5b7922db77","modified":1488721909322}],"Category":[{"name":"hexo","_id":"cizwsoepk0004wvt74yopr75n"}],"Data":[],"Page":[{"title":"about","date":"2017-02-21T14:40:55.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-02-21 22:40:55\n---\n","updated":"2017-02-21T14:40:55.475Z","path":"about/index.html","comments":1,"layout":"page","_id":"cizwsoepa0001wvt7z7q7d5br","content":"","excerpt":"","more":""},{"layout":"categories","title":"categories","_content":"\n\n\n","source":"categories/index.md","raw":"layout: categories\ntitle: categories\n---\n\n\n\n","date":"2017-02-21T14:58:35.305Z","updated":"2017-02-21T14:58:35.305Z","path":"categories/index.html","comments":1,"_id":"cizwsoepi0003wvt78el894c2","content":"","excerpt":"","more":""},{"layout":"tags","title":"tags","_content":"\n\n","source":"tags/index.md","raw":"layout: tags\ntitle: tags \n---\n\n\n","date":"2017-02-21T14:57:47.612Z","updated":"2017-02-21T14:57:47.612Z","path":"tags/index.html","comments":1,"_id":"cizwsoepy0007wvt7x1x3z7nv","content":"","excerpt":"","more":""}],"Post":[{"title":"hexo代码高亮和自定义","date":"2017-01-15T03:10:06.000Z","comments":1,"_content":"\n\n#### 设置代码高亮\n设置好主题后，发布文章后，有的主题并没有设置代码高亮。要在hexo设置代码高亮，修改config：\n```\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n```\n然后themes的config也要添加相应的高亮配置。\n<!-- more -->\n这段代码的作用，查看source/css/style.styl里面:\n```\n@import 'nib'\n\nglobal-reset()\n@import '_base/variable'\n@import '_base/font'\n@import '_base/public'\n@import '_partial/header'\n@import '_partial/index'\n@import '_partial/article'\n@import '_partial/helper'\n@import '_partial/aside'\n@import '_partial/footer'\nif highlight\n  @import '_base/code'\nif duoshuo\n  @import '_partial/duoshuo'\nif fancybox\n  @import '_partial/gallery'\n```\n可以看到，如果设置highlight，那么就引入_base/code下面的css样式。\n\n#### 自定义代码高亮\nWordpress有个[Google Prettify][1]插件，在这里也可以进行高亮显示。\n首先将config配置的highlight关闭：\n```\nhighlight:\n  enable: false\n  line_number: false\n  auto_detect: false\n  tab_replace:\n```\n然后我们需要下载[prettify][2]，并引入css和js文件\n```\n <!-- 代码高亮-->\n <link rel=\"stylesheet\" href=\"/css/prettify.css\" type=\"text/css\">\n <script src=\"/js/prettify.js\"type=\"text/javascript\"></script>\n```\n这段代码需要在页面的head引入：\n在layout的head.ejs文件中，我们可以查看有js,css文件引入，后面添加即可。\n\n最后我们需要在网页加载完成之后调用即可：\n```\n$(window).load(function(){\n $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto;');\n   prettyPrint();\n })\n```\n>**注意：**这段代码使用$(window).load，这是在页面加载完成后调用，跟(document).ready(function() 有所区别。前者只能调用一次，后者能调用多次。在这里，我们添加到文件after_footer.ejs中\n\n```\n$(document).ready(function(){ \n   console.log(\"执行调用prettify  start\");\n  $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto;');\n   prettyPrint();\n   console.log(\"执行调用prettify  end\");\n```\n另外关于代码高亮的主题，可以在这个[网站][3]选择一套你喜欢的主题替换上面的prettify.css即可。\n最后添加代码如下：\n```\n#head.ejs\n<!-- 代码高亮-->\n    <link rel=\"stylesheet\" href=\"/css/tranquil-heart.min.css\" type=\"text/css\">\n    <script src=\"/js/prettify.js\" type=\"text/javascript\"></script>\n```\n\n\n[1]:https://github.com/google/code-prettify\n[2]:https://raw.githubusercontent.com/google/code-prettify/master/distrib/prettify-small.zip\n[3]:http://jmblog.github.io/color-themes-for-google-code-prettify/\n\n\n\n","source":"_posts/hexo代码高亮和自定义.md","raw":"---\ntitle: hexo代码高亮和自定义\ndate: 2017-1-15 11:10:06\ntags: hexo代码高亮\ncategories: hexo\ncomments: true\n---\n\n\n#### 设置代码高亮\n设置好主题后，发布文章后，有的主题并没有设置代码高亮。要在hexo设置代码高亮，修改config：\n```\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n```\n然后themes的config也要添加相应的高亮配置。\n<!-- more -->\n这段代码的作用，查看source/css/style.styl里面:\n```\n@import 'nib'\n\nglobal-reset()\n@import '_base/variable'\n@import '_base/font'\n@import '_base/public'\n@import '_partial/header'\n@import '_partial/index'\n@import '_partial/article'\n@import '_partial/helper'\n@import '_partial/aside'\n@import '_partial/footer'\nif highlight\n  @import '_base/code'\nif duoshuo\n  @import '_partial/duoshuo'\nif fancybox\n  @import '_partial/gallery'\n```\n可以看到，如果设置highlight，那么就引入_base/code下面的css样式。\n\n#### 自定义代码高亮\nWordpress有个[Google Prettify][1]插件，在这里也可以进行高亮显示。\n首先将config配置的highlight关闭：\n```\nhighlight:\n  enable: false\n  line_number: false\n  auto_detect: false\n  tab_replace:\n```\n然后我们需要下载[prettify][2]，并引入css和js文件\n```\n <!-- 代码高亮-->\n <link rel=\"stylesheet\" href=\"/css/prettify.css\" type=\"text/css\">\n <script src=\"/js/prettify.js\"type=\"text/javascript\"></script>\n```\n这段代码需要在页面的head引入：\n在layout的head.ejs文件中，我们可以查看有js,css文件引入，后面添加即可。\n\n最后我们需要在网页加载完成之后调用即可：\n```\n$(window).load(function(){\n $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto;');\n   prettyPrint();\n })\n```\n>**注意：**这段代码使用$(window).load，这是在页面加载完成后调用，跟(document).ready(function() 有所区别。前者只能调用一次，后者能调用多次。在这里，我们添加到文件after_footer.ejs中\n\n```\n$(document).ready(function(){ \n   console.log(\"执行调用prettify  start\");\n  $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto;');\n   prettyPrint();\n   console.log(\"执行调用prettify  end\");\n```\n另外关于代码高亮的主题，可以在这个[网站][3]选择一套你喜欢的主题替换上面的prettify.css即可。\n最后添加代码如下：\n```\n#head.ejs\n<!-- 代码高亮-->\n    <link rel=\"stylesheet\" href=\"/css/tranquil-heart.min.css\" type=\"text/css\">\n    <script src=\"/js/prettify.js\" type=\"text/javascript\"></script>\n```\n\n\n[1]:https://github.com/google/code-prettify\n[2]:https://raw.githubusercontent.com/google/code-prettify/master/distrib/prettify-small.zip\n[3]:http://jmblog.github.io/color-themes-for-google-code-prettify/\n\n\n\n","slug":"hexo代码高亮和自定义","published":1,"updated":"2017-03-05T14:18:35.035Z","layout":"post","photos":[],"link":"","_id":"cizwsoep20000wvt714w4s06m","content":"<h4 id=\"设置代码高亮\"><a href=\"#设置代码高亮\" class=\"headerlink\" title=\"设置代码高亮\"></a>设置代码高亮</h4><p>设置好主题后，发布文章后，有的主题并没有设置代码高亮。要在hexo设置代码高亮，修改config：</p>\n<pre><code>highlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n</code></pre><p>然后themes的config也要添加相应的高亮配置。<br><a id=\"more\"></a><br>这段代码的作用，查看source/css/style.styl里面:</p>\n<pre><code>@import &#39;nib&#39;\n\nglobal-reset()\n@import &#39;_base/variable&#39;\n@import &#39;_base/font&#39;\n@import &#39;_base/public&#39;\n@import &#39;_partial/header&#39;\n@import &#39;_partial/index&#39;\n@import &#39;_partial/article&#39;\n@import &#39;_partial/helper&#39;\n@import &#39;_partial/aside&#39;\n@import &#39;_partial/footer&#39;\nif highlight\n  @import &#39;_base/code&#39;\nif duoshuo\n  @import &#39;_partial/duoshuo&#39;\nif fancybox\n  @import &#39;_partial/gallery&#39;\n</code></pre><p>可以看到，如果设置highlight，那么就引入_base/code下面的css样式。</p>\n<h4 id=\"自定义代码高亮\"><a href=\"#自定义代码高亮\" class=\"headerlink\" title=\"自定义代码高亮\"></a>自定义代码高亮</h4><p>Wordpress有个<a href=\"https://github.com/google/code-prettify\" target=\"_blank\" rel=\"external\">Google Prettify</a>插件，在这里也可以进行高亮显示。<br>首先将config配置的highlight关闭：</p>\n<pre><code>highlight:\n  enable: false\n  line_number: false\n  auto_detect: false\n  tab_replace:\n</code></pre><p>然后我们需要下载<a href=\"https://raw.githubusercontent.com/google/code-prettify/master/distrib/prettify-small.zip\" target=\"_blank\" rel=\"external\">prettify</a>，并引入css和js文件</p>\n<pre><code> &lt;!-- 代码高亮--&gt;\n &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/prettify.css&quot; type=&quot;text/css&quot;&gt;\n &lt;script src=&quot;/js/prettify.js&quot;type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n</code></pre><p>这段代码需要在页面的head引入：<br>在layout的head.ejs文件中，我们可以查看有js,css文件引入，后面添加即可。</p>\n<p>最后我们需要在网页加载完成之后调用即可：</p>\n<pre><code>$(window).load(function(){\n $(&#39;pre&#39;).addClass(&#39;prettyprint linenums&#39;).attr(&#39;style&#39;, &#39;overflow:auto;&#39;);\n   prettyPrint();\n })\n</code></pre><blockquote>\n<p><strong>注意：</strong>这段代码使用$(window).load，这是在页面加载完成后调用，跟(document).ready(function() 有所区别。前者只能调用一次，后者能调用多次。在这里，我们添加到文件after_footer.ejs中</p>\n</blockquote>\n<pre><code>$(document).ready(function(){ \n   console.log(&quot;执行调用prettify  start&quot;);\n  $(&#39;pre&#39;).addClass(&#39;prettyprint linenums&#39;).attr(&#39;style&#39;, &#39;overflow:auto;&#39;);\n   prettyPrint();\n   console.log(&quot;执行调用prettify  end&quot;);\n</code></pre><p>另外关于代码高亮的主题，可以在这个<a href=\"http://jmblog.github.io/color-themes-for-google-code-prettify/\" target=\"_blank\" rel=\"external\">网站</a>选择一套你喜欢的主题替换上面的prettify.css即可。<br>最后添加代码如下：</p>\n<pre><code>#head.ejs\n&lt;!-- 代码高亮--&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/tranquil-heart.min.css&quot; type=&quot;text/css&quot;&gt;\n    &lt;script src=&quot;/js/prettify.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n</code></pre>","excerpt":"<h4 id=\"设置代码高亮\"><a href=\"#设置代码高亮\" class=\"headerlink\" title=\"设置代码高亮\"></a>设置代码高亮</h4><p>设置好主题后，发布文章后，有的主题并没有设置代码高亮。要在hexo设置代码高亮，修改config：</p>\n<pre><code>highlight:\n  enable: true\n  line_number: true\n  auto_detect: true\n  tab_replace:\n</code></pre><p>然后themes的config也要添加相应的高亮配置。<br>","more":"<br>这段代码的作用，查看source/css/style.styl里面:</p>\n<pre><code>@import &#39;nib&#39;\n\nglobal-reset()\n@import &#39;_base/variable&#39;\n@import &#39;_base/font&#39;\n@import &#39;_base/public&#39;\n@import &#39;_partial/header&#39;\n@import &#39;_partial/index&#39;\n@import &#39;_partial/article&#39;\n@import &#39;_partial/helper&#39;\n@import &#39;_partial/aside&#39;\n@import &#39;_partial/footer&#39;\nif highlight\n  @import &#39;_base/code&#39;\nif duoshuo\n  @import &#39;_partial/duoshuo&#39;\nif fancybox\n  @import &#39;_partial/gallery&#39;\n</code></pre><p>可以看到，如果设置highlight，那么就引入_base/code下面的css样式。</p>\n<h4 id=\"自定义代码高亮\"><a href=\"#自定义代码高亮\" class=\"headerlink\" title=\"自定义代码高亮\"></a>自定义代码高亮</h4><p>Wordpress有个<a href=\"https://github.com/google/code-prettify\">Google Prettify</a>插件，在这里也可以进行高亮显示。<br>首先将config配置的highlight关闭：</p>\n<pre><code>highlight:\n  enable: false\n  line_number: false\n  auto_detect: false\n  tab_replace:\n</code></pre><p>然后我们需要下载<a href=\"https://raw.githubusercontent.com/google/code-prettify/master/distrib/prettify-small.zip\">prettify</a>，并引入css和js文件</p>\n<pre><code> &lt;!-- 代码高亮--&gt;\n &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/prettify.css&quot; type=&quot;text/css&quot;&gt;\n &lt;script src=&quot;/js/prettify.js&quot;type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n</code></pre><p>这段代码需要在页面的head引入：<br>在layout的head.ejs文件中，我们可以查看有js,css文件引入，后面添加即可。</p>\n<p>最后我们需要在网页加载完成之后调用即可：</p>\n<pre><code>$(window).load(function(){\n $(&#39;pre&#39;).addClass(&#39;prettyprint linenums&#39;).attr(&#39;style&#39;, &#39;overflow:auto;&#39;);\n   prettyPrint();\n })\n</code></pre><blockquote>\n<p><strong>注意：</strong>这段代码使用$(window).load，这是在页面加载完成后调用，跟(document).ready(function() 有所区别。前者只能调用一次，后者能调用多次。在这里，我们添加到文件after_footer.ejs中</p>\n</blockquote>\n<pre><code>$(document).ready(function(){ \n   console.log(&quot;执行调用prettify  start&quot;);\n  $(&#39;pre&#39;).addClass(&#39;prettyprint linenums&#39;).attr(&#39;style&#39;, &#39;overflow:auto;&#39;);\n   prettyPrint();\n   console.log(&quot;执行调用prettify  end&quot;);\n</code></pre><p>另外关于代码高亮的主题，可以在这个<a href=\"http://jmblog.github.io/color-themes-for-google-code-prettify/\">网站</a>选择一套你喜欢的主题替换上面的prettify.css即可。<br>最后添加代码如下：</p>\n<pre><code>#head.ejs\n&lt;!-- 代码高亮--&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/tranquil-heart.min.css&quot; type=&quot;text/css&quot;&gt;\n    &lt;script src=&quot;/js/prettify.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n</code></pre>"},{"title":"hexo同步到github","date":"2017-11-15T04:10:06.000Z","comments":1,"_content":"#### 上传本地项目到github\n1. 建立Git仓库\n```\ngit init\n```\n2. 将项目文件添加到仓库中\n```\ngit add .\n```\n注意：add后面有个 .\n\n<!--more-->\n3. 将我们添加的文件commit到git仓库， 添加注释\n```\ngit commit -m \"注释\"\n```\n4. 将本地的仓库与github上的仓库进行关联\n```\ngit remote add origin \"git仓库的地址\"\n```\n>在这个工程中可能要求你输入账户密码，我们先保存ssh密钥在git上，使用git协议的地址就不会要求你输入了。\n\n5. 上传之前我们先从git上拉取一下\n```\ngit pull origin master\n```\n6. push本地项目到远程仓库\n```\ngit push -u origin master\n```\n至此项目就上传到github上了。\n\n\n","source":"_posts/hexo同步到github.md","raw":"\n---\ntitle: hexo同步到github\ndate: 2017-11-15 12:10:06\ntags: hexo\ncategories: hexo\ncomments: true\n---\n#### 上传本地项目到github\n1. 建立Git仓库\n```\ngit init\n```\n2. 将项目文件添加到仓库中\n```\ngit add .\n```\n注意：add后面有个 .\n\n<!--more-->\n3. 将我们添加的文件commit到git仓库， 添加注释\n```\ngit commit -m \"注释\"\n```\n4. 将本地的仓库与github上的仓库进行关联\n```\ngit remote add origin \"git仓库的地址\"\n```\n>在这个工程中可能要求你输入账户密码，我们先保存ssh密钥在git上，使用git协议的地址就不会要求你输入了。\n\n5. 上传之前我们先从git上拉取一下\n```\ngit pull origin master\n```\n6. push本地项目到远程仓库\n```\ngit push -u origin master\n```\n至此项目就上传到github上了。\n\n\n","slug":"hexo同步到github","published":1,"updated":"2017-03-05T14:23:58.780Z","layout":"post","photos":[],"link":"","_id":"cizwsoepf0002wvt7aqpfoow8","content":"<h4 id=\"上传本地项目到github\"><a href=\"#上传本地项目到github\" class=\"headerlink\" title=\"上传本地项目到github\"></a>上传本地项目到github</h4><ol>\n<li>建立Git仓库<pre><code>git init\n</code></pre></li>\n<li>将项目文件添加到仓库中<pre><code>git add .\n</code></pre>注意：add后面有个 .</li>\n</ol>\n<a id=\"more\"></a>\n<ol>\n<li>将我们添加的文件commit到git仓库， 添加注释<pre><code>git commit -m &quot;注释&quot;\n</code></pre></li>\n<li><p>将本地的仓库与github上的仓库进行关联</p>\n<pre><code>git remote add origin &quot;git仓库的地址&quot;\n</code></pre><blockquote>\n<p>在这个工程中可能要求你输入账户密码，我们先保存ssh密钥在git上，使用git协议的地址就不会要求你输入了。</p>\n</blockquote>\n</li>\n<li><p>上传之前我们先从git上拉取一下</p>\n<pre><code>git pull origin master\n</code></pre></li>\n<li>push本地项目到远程仓库<pre><code>git push -u origin master\n</code></pre>至此项目就上传到github上了。</li>\n</ol>\n","excerpt":"<h4 id=\"上传本地项目到github\"><a href=\"#上传本地项目到github\" class=\"headerlink\" title=\"上传本地项目到github\"></a>上传本地项目到github</h4><ol>\n<li>建立Git仓库<pre><code>git init\n</code></pre></li>\n<li>将项目文件添加到仓库中<pre><code>git add .\n</code></pre>注意：add后面有个 .</li>\n</ol>","more":"<ol>\n<li>将我们添加的文件commit到git仓库， 添加注释<pre><code>git commit -m &quot;注释&quot;\n</code></pre></li>\n<li><p>将本地的仓库与github上的仓库进行关联</p>\n<pre><code>git remote add origin &quot;git仓库的地址&quot;\n</code></pre><blockquote>\n<p>在这个工程中可能要求你输入账户密码，我们先保存ssh密钥在git上，使用git协议的地址就不会要求你输入了。</p>\n</blockquote>\n</li>\n<li><p>上传之前我们先从git上拉取一下</p>\n<pre><code>git pull origin master\n</code></pre></li>\n<li>push本地项目到远程仓库<pre><code>git push -u origin master\n</code></pre>至此项目就上传到github上了。</li>\n</ol>"},{"title":"hexo部署和自动化发布","date":"2016-11-14T03:10:06.000Z","comments":1,"_content":" 这里安装hexo过程省略，参考其他文章。这里主要说下如何利用git自动化发布：\n\n> 安装git：sudo apt-get install git\n\n- **创建GitHub Repository** ，在git上创建一个reop库，取名hexo_static\n- **安装插件** \n\n``` \n $ npm install hexo-deployer-git --save\n\n```\n\n<!-- more -->\n\n- **修改配置文件**  \n\n```\ndeploy: \n  type: git \n  repo: git@github.com:$username/hexo_static.git\n  branch: master\n```\n\n注意替换username为自己的git名字，注意这里如果使用https协议的git，那么每次都会要求输入账户和密码，这里使用git协议，在ssh里保存密钥，这样不用每次都输入密码\n- **执行命令** \n\n``` \n$ hexo generate\n$ hexo deploy\n```\n\ngenerate:  生成静态文件，文件生成在pulic目录下\ndeploy: 发布到git的库hexo_static\n- **实现自动化** \n> 这里实现自动化思路：通过git --bare 生成一个裸库bare，裸库bare作为一个远程库remote，在裸库实现一个钩子post-receive，当本地库进行push的时候，自动运行钩子，从而更新静态文件目录A，使用nginx进行转发到静态文件目录A。\n\n- **第1步：初始化空仓库**\n \n``` \n$ git init --bare ~/hexo_bare\n```\n \n- **第2步：初始化空仓库**\n \n```\n$ vim ~/hexo_bare/hooks/post-receive\n```\n\n编辑:\n \n```\necho \"start 钩子\"\ngit --work-tree=/usr/local/nginx/html/myblog --git-dir=/usr/local/hexo_bare checkout -f\necho \"end 钩子\"\n```\n \n`这里注意钩子post-ceive后面不带.sample，同时注意赋予权限`：\n\n```\nchmod +x post-receive \n```\n\n- **第3步：将空仓库关联到主仓库** \n\n```\n$ git clone https://github.com/$username/hexo_static.git ~/hexo_static \n$ cd ~/hexo_static\n$ git remote add live ~/hexo_bare\n```\n\n这里给空库起名live ,可以在本地库hexo_static\n调用命令： git remote -v 查看到远程库名\n`注意：查看下.git/config默认的库名是否是`\n\n```\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\n\n- **第4步：创建自动化脚本** \n\n```\n$ vim ~/hexo_blog/hexo_git_deploy.sh\n```\n\n脚本内容：\n\n```\n#!/bin/bash\n\nhexo clean\nhexo generate \nhexo deploy\n\n( cd ~/hexo_static ; git pull origin; git push live master)\n```\n\n`注意：这里一定要git pull origin,不然无法pull成功！`\n-   **第5步：nginx指定静态目录**\n      在nginx的配置文件中配置即可\n-   **第6步：执行自动化**\n\n```\n$ hexo new test\n$ sh hexo_git_deplay.sh\n```\n\n脚本自动化发布成功！可以看到钩子成功执行！查看nginx的静态目录。发现test文件已经存在，甚至不用重启nginx！\n至此完成自动化！\n\n\n\n","source":"_posts/hexo自动化.md","raw":"---\ntitle: hexo部署和自动化发布\ndate: 2016-11-14 11:10:06\ntags: hexo自动化\ncategories: hexo\ncomments:  true\n---\n 这里安装hexo过程省略，参考其他文章。这里主要说下如何利用git自动化发布：\n\n> 安装git：sudo apt-get install git\n\n- **创建GitHub Repository** ，在git上创建一个reop库，取名hexo_static\n- **安装插件** \n\n``` \n $ npm install hexo-deployer-git --save\n\n```\n\n<!-- more -->\n\n- **修改配置文件**  \n\n```\ndeploy: \n  type: git \n  repo: git@github.com:$username/hexo_static.git\n  branch: master\n```\n\n注意替换username为自己的git名字，注意这里如果使用https协议的git，那么每次都会要求输入账户和密码，这里使用git协议，在ssh里保存密钥，这样不用每次都输入密码\n- **执行命令** \n\n``` \n$ hexo generate\n$ hexo deploy\n```\n\ngenerate:  生成静态文件，文件生成在pulic目录下\ndeploy: 发布到git的库hexo_static\n- **实现自动化** \n> 这里实现自动化思路：通过git --bare 生成一个裸库bare，裸库bare作为一个远程库remote，在裸库实现一个钩子post-receive，当本地库进行push的时候，自动运行钩子，从而更新静态文件目录A，使用nginx进行转发到静态文件目录A。\n\n- **第1步：初始化空仓库**\n \n``` \n$ git init --bare ~/hexo_bare\n```\n \n- **第2步：初始化空仓库**\n \n```\n$ vim ~/hexo_bare/hooks/post-receive\n```\n\n编辑:\n \n```\necho \"start 钩子\"\ngit --work-tree=/usr/local/nginx/html/myblog --git-dir=/usr/local/hexo_bare checkout -f\necho \"end 钩子\"\n```\n \n`这里注意钩子post-ceive后面不带.sample，同时注意赋予权限`：\n\n```\nchmod +x post-receive \n```\n\n- **第3步：将空仓库关联到主仓库** \n\n```\n$ git clone https://github.com/$username/hexo_static.git ~/hexo_static \n$ cd ~/hexo_static\n$ git remote add live ~/hexo_bare\n```\n\n这里给空库起名live ,可以在本地库hexo_static\n调用命令： git remote -v 查看到远程库名\n`注意：查看下.git/config默认的库名是否是`\n\n```\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\n\n- **第4步：创建自动化脚本** \n\n```\n$ vim ~/hexo_blog/hexo_git_deploy.sh\n```\n\n脚本内容：\n\n```\n#!/bin/bash\n\nhexo clean\nhexo generate \nhexo deploy\n\n( cd ~/hexo_static ; git pull origin; git push live master)\n```\n\n`注意：这里一定要git pull origin,不然无法pull成功！`\n-   **第5步：nginx指定静态目录**\n      在nginx的配置文件中配置即可\n-   **第6步：执行自动化**\n\n```\n$ hexo new test\n$ sh hexo_git_deplay.sh\n```\n\n脚本自动化发布成功！可以看到钩子成功执行！查看nginx的静态目录。发现test文件已经存在，甚至不用重启nginx！\n至此完成自动化！\n\n\n\n","slug":"hexo自动化","published":1,"updated":"2017-03-05T14:22:06.747Z","layout":"post","photos":[],"link":"","_id":"cizwsoepw0006wvt7baek296t","content":"<p> 这里安装hexo过程省略，参考其他文章。这里主要说下如何利用git自动化发布：</p>\n<blockquote>\n<p>安装git：sudo apt-get install git</p>\n</blockquote>\n<ul>\n<li><strong>创建GitHub Repository</strong> ，在git上创建一个reop库，取名hexo_static</li>\n<li><strong>安装插件</strong> </li>\n</ul>\n<pre><code> $ npm install hexo-deployer-git --save\n</code></pre><a id=\"more\"></a>\n<ul>\n<li><strong>修改配置文件</strong>  </li>\n</ul>\n<pre><code>deploy: \n  type: git \n  repo: git@github.com:$username/hexo_static.git\n  branch: master\n</code></pre><p>注意替换username为自己的git名字，注意这里如果使用https协议的git，那么每次都会要求输入账户和密码，这里使用git协议，在ssh里保存密钥，这样不用每次都输入密码</p>\n<ul>\n<li><strong>执行命令</strong> </li>\n</ul>\n<pre><code>$ hexo generate\n$ hexo deploy\n</code></pre><p>generate:  生成静态文件，文件生成在pulic目录下<br>deploy: 发布到git的库hexo_static</p>\n<ul>\n<li><p><strong>实现自动化</strong> </p>\n<blockquote>\n<p>这里实现自动化思路：通过git –bare 生成一个裸库bare，裸库bare作为一个远程库remote，在裸库实现一个钩子post-receive，当本地库进行push的时候，自动运行钩子，从而更新静态文件目录A，使用nginx进行转发到静态文件目录A。</p>\n</blockquote>\n</li>\n<li><p><strong>第1步：初始化空仓库</strong></p>\n</li>\n</ul>\n<pre><code>$ git init --bare ~/hexo_bare\n</code></pre><ul>\n<li><strong>第2步：初始化空仓库</strong></li>\n</ul>\n<pre><code>$ vim ~/hexo_bare/hooks/post-receive\n</code></pre><p>编辑:</p>\n<pre><code>echo &quot;start 钩子&quot;\ngit --work-tree=/usr/local/nginx/html/myblog --git-dir=/usr/local/hexo_bare checkout -f\necho &quot;end 钩子&quot;\n</code></pre><p><code>这里注意钩子post-ceive后面不带.sample，同时注意赋予权限</code>：</p>\n<pre><code>chmod +x post-receive\n</code></pre><ul>\n<li><strong>第3步：将空仓库关联到主仓库</strong> </li>\n</ul>\n<pre><code>$ git clone https://github.com/$username/hexo_static.git ~/hexo_static \n$ cd ~/hexo_static\n$ git remote add live ~/hexo_bare\n</code></pre><p>这里给空库起名live ,可以在本地库hexo_static<br>调用命令： git remote -v 查看到远程库名<br><code>注意：查看下.git/config默认的库名是否是</code></p>\n<pre><code>[branch &quot;master&quot;]\n        remote = origin\n        merge = refs/heads/master\n</code></pre><ul>\n<li><strong>第4步：创建自动化脚本</strong> </li>\n</ul>\n<pre><code>$ vim ~/hexo_blog/hexo_git_deploy.sh\n</code></pre><p>脚本内容：</p>\n<pre><code>#!/bin/bash\n\nhexo clean\nhexo generate \nhexo deploy\n\n( cd ~/hexo_static ; git pull origin; git push live master)\n</code></pre><p><code>注意：这里一定要git pull origin,不然无法pull成功！</code></p>\n<ul>\n<li><strong>第5步：nginx指定静态目录</strong><br>  在nginx的配置文件中配置即可</li>\n<li><strong>第6步：执行自动化</strong></li>\n</ul>\n<pre><code>$ hexo new test\n$ sh hexo_git_deplay.sh\n</code></pre><p>脚本自动化发布成功！可以看到钩子成功执行！查看nginx的静态目录。发现test文件已经存在，甚至不用重启nginx！<br>至此完成自动化！</p>\n","excerpt":"<p> 这里安装hexo过程省略，参考其他文章。这里主要说下如何利用git自动化发布：</p>\n<blockquote>\n<p>安装git：sudo apt-get install git</p>\n</blockquote>\n<ul>\n<li><strong>创建GitHub Repository</strong> ，在git上创建一个reop库，取名hexo_static</li>\n<li><strong>安装插件</strong> </li>\n</ul>\n<pre><code> $ npm install hexo-deployer-git --save\n</code></pre>","more":"<ul>\n<li><strong>修改配置文件</strong>  </li>\n</ul>\n<pre><code>deploy: \n  type: git \n  repo: git@github.com:$username/hexo_static.git\n  branch: master\n</code></pre><p>注意替换username为自己的git名字，注意这里如果使用https协议的git，那么每次都会要求输入账户和密码，这里使用git协议，在ssh里保存密钥，这样不用每次都输入密码</p>\n<ul>\n<li><strong>执行命令</strong> </li>\n</ul>\n<pre><code>$ hexo generate\n$ hexo deploy\n</code></pre><p>generate:  生成静态文件，文件生成在pulic目录下<br>deploy: 发布到git的库hexo_static</p>\n<ul>\n<li><p><strong>实现自动化</strong> </p>\n<blockquote>\n<p>这里实现自动化思路：通过git –bare 生成一个裸库bare，裸库bare作为一个远程库remote，在裸库实现一个钩子post-receive，当本地库进行push的时候，自动运行钩子，从而更新静态文件目录A，使用nginx进行转发到静态文件目录A。</p>\n</blockquote>\n</li>\n<li><p><strong>第1步：初始化空仓库</strong></p>\n</li>\n</ul>\n<pre><code>$ git init --bare ~/hexo_bare\n</code></pre><ul>\n<li><strong>第2步：初始化空仓库</strong></li>\n</ul>\n<pre><code>$ vim ~/hexo_bare/hooks/post-receive\n</code></pre><p>编辑:</p>\n<pre><code>echo &quot;start 钩子&quot;\ngit --work-tree=/usr/local/nginx/html/myblog --git-dir=/usr/local/hexo_bare checkout -f\necho &quot;end 钩子&quot;\n</code></pre><p><code>这里注意钩子post-ceive后面不带.sample，同时注意赋予权限</code>：</p>\n<pre><code>chmod +x post-receive\n</code></pre><ul>\n<li><strong>第3步：将空仓库关联到主仓库</strong> </li>\n</ul>\n<pre><code>$ git clone https://github.com/$username/hexo_static.git ~/hexo_static \n$ cd ~/hexo_static\n$ git remote add live ~/hexo_bare\n</code></pre><p>这里给空库起名live ,可以在本地库hexo_static<br>调用命令： git remote -v 查看到远程库名<br><code>注意：查看下.git/config默认的库名是否是</code></p>\n<pre><code>[branch &quot;master&quot;]\n        remote = origin\n        merge = refs/heads/master\n</code></pre><ul>\n<li><strong>第4步：创建自动化脚本</strong> </li>\n</ul>\n<pre><code>$ vim ~/hexo_blog/hexo_git_deploy.sh\n</code></pre><p>脚本内容：</p>\n<pre><code>#!/bin/bash\n\nhexo clean\nhexo generate \nhexo deploy\n\n( cd ~/hexo_static ; git pull origin; git push live master)\n</code></pre><p><code>注意：这里一定要git pull origin,不然无法pull成功！</code></p>\n<ul>\n<li><strong>第5步：nginx指定静态目录</strong><br>  在nginx的配置文件中配置即可</li>\n<li><strong>第6步：执行自动化</strong></li>\n</ul>\n<pre><code>$ hexo new test\n$ sh hexo_git_deplay.sh\n</code></pre><p>脚本自动化发布成功！可以看到钩子成功执行！查看nginx的静态目录。发现test文件已经存在，甚至不用重启nginx！<br>至此完成自动化！</p>"},{"title":"hexo发布文章注意","date":"2017-01-14T03:10:06.000Z","comments":1,"_content":"\n**注意点1：**发布的时候,检查_config.yml内容，特别注意:后面需要有一个空格：tags: markdown\n不然会报错：\ncan not read a block mapping entry; a multiline key may not be an implicit key\n\n\n\n","source":"_posts/hexo配置注意的地方.md","raw":"---\ntitle: hexo发布文章注意\ndate: 2017-01-14 11:10:06\ntags: hexo配置\ncategories: hexo\ncomments: true\n---\n\n**注意点1：**发布的时候,检查_config.yml内容，特别注意:后面需要有一个空格：tags: markdown\n不然会报错：\ncan not read a block mapping entry; a multiline key may not be an implicit key\n\n\n\n","slug":"hexo配置注意的地方","published":1,"updated":"2017-03-05T14:23:47.818Z","layout":"post","photos":[],"link":"","_id":"cizwsoeq10008wvt723k8drmu","content":"<p><strong>注意点1：</strong>发布的时候,检查_config.yml内容，特别注意:后面需要有一个空格：tags: markdown<br>不然会报错：<br>can not read a block mapping entry; a multiline key may not be an implicit key</p>\n","excerpt":"","more":"<p><strong>注意点1：</strong>发布的时候,检查_config.yml内容，特别注意:后面需要有一个空格：tags: markdown<br>不然会报错：<br>can not read a block mapping entry; a multiline key may not be an implicit key</p>\n"},{"title":"markdown的使用方法","date":"2016-10-14T03:10:06.000Z","comments":1,"_content":"\n\n**马克飞象**是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：\n \n- **功能丰富** ：支持高亮代码块、*LaTeX* 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；\n- **得心应手** ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web；\n- **深度整合** ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。\n\n-------------------\n<!-- more -->\n[TOC]\n\n## Markdown简介\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [维基百科](https://zh.wikipedia.org/wiki/Markdown)\n\n正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为**粗体**或者*斜体*，创建一个[链接](http://www.example.com)或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按`Ctrl + /`查看帮助。 \n\n### 代码块\n``` python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    '''A docstring'''\n    if param1 > param2: # interesting\n        print 'Greater'\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n>>> message = '''interpreter\n... prompt'''\n```\n### LaTeX 公式\n\n可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式：\n\n$$\tx = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$\n\n### 表格\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n### 流程图\n```flow\nst=>start: Start\ne=>end\nop=>operation: My Operation\ncond=>condition: Yes or No?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n以及时序图:\n\n```sequence\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n> **提示：**想了解更多，请查看**流程图**[语法][3]以及**时序图**[语法][4]。\n\n### 复选框\n\n使用 `- [ ]` 和 `- [x]` 语法可以创建复选框，实现 todo-list 等功能。例如：\n\n- [x] 已完成事项\n- [ ] 待办事项1\n- [ ] 待办事项2\n\n> **注意：**目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在**马克飞象**中修改 Markdown 原文才可生效。下个版本将会全面支持。\n\n\n## 印象笔记相关\n\n### 笔记本和标签\n**马克飞象**增加了`@(笔记本)[标签A|标签B]`语法, 以选择笔记本和添加标签。 **绑定账号后**， 输入`(`自动会出现笔记本列表，请从中选择。\n\n### 笔记标题\n**马克飞象**会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 `欢迎使用马克飞象`。\n\n### 快捷编辑\n保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到**马克飞象**中打开并编辑该笔记。\n>**注意：**目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。\n\n### 数据同步\n**马克飞象**通过**将Markdown原文以隐藏内容保存在笔记中**的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。\n\n >**隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。**\n\n### 离线存储\n**马克飞象**使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过`文档管理`打开。\n\n> **注意：**虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，**请务必经常及时同步到印象笔记**。\n\n## 编辑器相关\n### 设置\n右侧系统菜单（快捷键`Ctrl + M`）的`设置`中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。\n\n### 快捷键\n\n帮助    `Ctrl + /`\n同步文档    `Ctrl + S`\n创建文档    `Ctrl + Alt + N`\n最大化编辑器    `Ctrl + Enter`\n预览文档 `Ctrl + Alt + Enter`\n文档管理    `Ctrl + O`\n系统菜单    `Ctrl + M` \n\n加粗    `Ctrl + B`\n插入图片    `Ctrl + G`\n插入链接    `Ctrl + L`\n提升标题    `Ctrl + H`\n\n## 关于收费\n\n**马克飞象**为新用户提供 10 天的试用期，试用期过后需要[续费](maxiang.info/vip.html)才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。\n\n\n## 反馈与建议\n- 微博：[@马克飞象](http://weibo.com/u/2788354117)，[@GGock](http://weibo.com/ggock \"开发者个人账号\")\n- 邮箱：<hustgock@gmail.com>\n\n---------\n感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。\n\n\n\n\n[^demo]: 这是一个示例脚注。请查阅 [MultiMarkdown 文档](https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes) 关于脚注的说明。 **限制：** 印象笔记的笔记内容使用 [ENML][5] 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致`脚注`和`TOC`无法正常点击。\n\n\n  [1]: http://maxiang.info/client_zh\n  [2]: https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop\n  [3]: http://adrai.github.io/flowchart.js/\n  [4]: http://bramp.github.io/js-sequence-diagrams/\n  [5]: https://dev.yinxiang.com/doc/articles/enml.php\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/markdown使用.md","raw":"\n---\ntitle: markdown的使用方法\ndate: 2016-10-14 11:10:06\ntags: markdown\ncomments: true\n---\n\n\n**马克飞象**是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：\n \n- **功能丰富** ：支持高亮代码块、*LaTeX* 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；\n- **得心应手** ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web；\n- **深度整合** ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。\n\n-------------------\n<!-- more -->\n[TOC]\n\n## Markdown简介\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [维基百科](https://zh.wikipedia.org/wiki/Markdown)\n\n正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为**粗体**或者*斜体*，创建一个[链接](http://www.example.com)或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按`Ctrl + /`查看帮助。 \n\n### 代码块\n``` python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    '''A docstring'''\n    if param1 > param2: # interesting\n        print 'Greater'\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n>>> message = '''interpreter\n... prompt'''\n```\n### LaTeX 公式\n\n可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式：\n\n$$\tx = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$\n\n### 表格\n| Item      |    Value | Qty  |\n| :-------- | --------:| :--: |\n| Computer  | 1600 USD |  5   |\n| Phone     |   12 USD |  12  |\n| Pipe      |    1 USD | 234  |\n\n### 流程图\n```flow\nst=>start: Start\ne=>end\nop=>operation: My Operation\ncond=>condition: Yes or No?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n以及时序图:\n\n```sequence\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n> **提示：**想了解更多，请查看**流程图**[语法][3]以及**时序图**[语法][4]。\n\n### 复选框\n\n使用 `- [ ]` 和 `- [x]` 语法可以创建复选框，实现 todo-list 等功能。例如：\n\n- [x] 已完成事项\n- [ ] 待办事项1\n- [ ] 待办事项2\n\n> **注意：**目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在**马克飞象**中修改 Markdown 原文才可生效。下个版本将会全面支持。\n\n\n## 印象笔记相关\n\n### 笔记本和标签\n**马克飞象**增加了`@(笔记本)[标签A|标签B]`语法, 以选择笔记本和添加标签。 **绑定账号后**， 输入`(`自动会出现笔记本列表，请从中选择。\n\n### 笔记标题\n**马克飞象**会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 `欢迎使用马克飞象`。\n\n### 快捷编辑\n保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到**马克飞象**中打开并编辑该笔记。\n>**注意：**目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。\n\n### 数据同步\n**马克飞象**通过**将Markdown原文以隐藏内容保存在笔记中**的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。\n\n >**隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。**\n\n### 离线存储\n**马克飞象**使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过`文档管理`打开。\n\n> **注意：**虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，**请务必经常及时同步到印象笔记**。\n\n## 编辑器相关\n### 设置\n右侧系统菜单（快捷键`Ctrl + M`）的`设置`中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。\n\n### 快捷键\n\n帮助    `Ctrl + /`\n同步文档    `Ctrl + S`\n创建文档    `Ctrl + Alt + N`\n最大化编辑器    `Ctrl + Enter`\n预览文档 `Ctrl + Alt + Enter`\n文档管理    `Ctrl + O`\n系统菜单    `Ctrl + M` \n\n加粗    `Ctrl + B`\n插入图片    `Ctrl + G`\n插入链接    `Ctrl + L`\n提升标题    `Ctrl + H`\n\n## 关于收费\n\n**马克飞象**为新用户提供 10 天的试用期，试用期过后需要[续费](maxiang.info/vip.html)才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。\n\n\n## 反馈与建议\n- 微博：[@马克飞象](http://weibo.com/u/2788354117)，[@GGock](http://weibo.com/ggock \"开发者个人账号\")\n- 邮箱：<hustgock@gmail.com>\n\n---------\n感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。\n\n\n\n\n[^demo]: 这是一个示例脚注。请查阅 [MultiMarkdown 文档](https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes) 关于脚注的说明。 **限制：** 印象笔记的笔记内容使用 [ENML][5] 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致`脚注`和`TOC`无法正常点击。\n\n\n  [1]: http://maxiang.info/client_zh\n  [2]: https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop\n  [3]: http://adrai.github.io/flowchart.js/\n  [4]: http://bramp.github.io/js-sequence-diagrams/\n  [5]: https://dev.yinxiang.com/doc/articles/enml.php\n\n\n\n\n\n\n\n\n\n\n\n","slug":"markdown使用","published":1,"updated":"2017-03-05T14:23:25.907Z","layout":"post","photos":[],"link":"","_id":"cizwsoeq70009wvt7c1zpac25","content":"<p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p>\n<ul>\n<li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li>\n<li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href=\"http://maxiang.info/client_zh\" target=\"_blank\" rel=\"external\">桌面客户端</a>以及<a href=\"https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop\" target=\"_blank\" rel=\"external\">离线Chrome App</a>，支持移动端 Web；</li>\n<li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li>\n</ul>\n<hr>\n<a id=\"more\"></a>\n<p>[TOC]</p>\n<h2 id=\"Markdown简介\"><a href=\"#Markdown简介\" class=\"headerlink\" title=\"Markdown简介\"></a>Markdown简介</h2><blockquote>\n<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href=\"https://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\">维基百科</a></p>\n</blockquote>\n<p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href=\"http://www.example.com\" target=\"_blank\" rel=\"external\">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。 </p>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><pre><code class=\"python\">@requires_authorization\ndef somefunc(param1=&#39;&#39;, param2=0):\n    &#39;&#39;&#39;A docstring&#39;&#39;&#39;\n    if param1 &gt; param2: # interesting\n        print &#39;Greater&#39;\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n&gt;&gt;&gt; message = &#39;&#39;&#39;interpreter\n... prompt&#39;&#39;&#39;\n</code></pre>\n<h3 id=\"LaTeX-公式\"><a href=\"#LaTeX-公式\" class=\"headerlink\" title=\"LaTeX 公式\"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式：</p>\n<p>$$    x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><pre><code class=\"flow\">st=&gt;start: Start\ne=&gt;end\nop=&gt;operation: My Operation\ncond=&gt;condition: Yes or No?\n\nst-&gt;op-&gt;cond\ncond(yes)-&gt;e\ncond(no)-&gt;op\n</code></pre>\n<p>以及时序图:</p>\n<pre><code class=\"sequence\">Alice-&gt;Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob--&gt;Alice: I am good thanks!\n</code></pre>\n<blockquote>\n<p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href=\"http://adrai.github.io/flowchart.js/\" target=\"_blank\" rel=\"external\">语法</a>以及<strong>时序图</strong><a href=\"http://bramp.github.io/js-sequence-diagrams/\" target=\"_blank\" rel=\"external\">语法</a>。</p>\n</blockquote>\n<h3 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p>\n<ul>\n<li>[x] 已完成事项</li>\n<li>[ ] 待办事项1</li>\n<li>[ ] 待办事项2</li>\n</ul>\n<blockquote>\n<p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p>\n</blockquote>\n<h2 id=\"印象笔记相关\"><a href=\"#印象笔记相关\" class=\"headerlink\" title=\"印象笔记相关\"></a>印象笔记相关</h2><h3 id=\"笔记本和标签\"><a href=\"#笔记本和标签\" class=\"headerlink\" title=\"笔记本和标签\"></a>笔记本和标签</h3><p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p>\n<h3 id=\"笔记标题\"><a href=\"#笔记标题\" class=\"headerlink\" title=\"笔记标题\"></a>笔记标题</h3><p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p>\n<h3 id=\"快捷编辑\"><a href=\"#快捷编辑\" class=\"headerlink\" title=\"快捷编辑\"></a>快捷编辑</h3><p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p>\n<blockquote>\n<p><strong>注意：</strong>目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p>\n</blockquote>\n<h3 id=\"数据同步\"><a href=\"#数据同步\" class=\"headerlink\" title=\"数据同步\"></a>数据同步</h3><p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p>\n<blockquote>\n<p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p>\n</blockquote>\n<h3 id=\"离线存储\"><a href=\"#离线存储\" class=\"headerlink\" title=\"离线存储\"></a>离线存储</h3><p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p>\n<blockquote>\n<p><strong>注意：</strong>虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p>\n</blockquote>\n<h2 id=\"编辑器相关\"><a href=\"#编辑器相关\" class=\"headerlink\" title=\"编辑器相关\"></a>编辑器相关</h2><h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><p>右侧系统菜单（快捷键<code>Ctrl + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p>\n<h3 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h3><p>帮助    <code>Ctrl + /</code><br>同步文档    <code>Ctrl + S</code><br>创建文档    <code>Ctrl + Alt + N</code><br>最大化编辑器    <code>Ctrl + Enter</code><br>预览文档 <code>Ctrl + Alt + Enter</code><br>文档管理    <code>Ctrl + O</code><br>系统菜单    <code>Ctrl + M</code> </p>\n<p>加粗    <code>Ctrl + B</code><br>插入图片    <code>Ctrl + G</code><br>插入链接    <code>Ctrl + L</code><br>提升标题    <code>Ctrl + H</code></p>\n<h2 id=\"关于收费\"><a href=\"#关于收费\" class=\"headerlink\" title=\"关于收费\"></a>关于收费</h2><p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href=\"maxiang.info/vip.html\">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p>\n<h2 id=\"反馈与建议\"><a href=\"#反馈与建议\" class=\"headerlink\" title=\"反馈与建议\"></a>反馈与建议</h2><ul>\n<li>微博：<a href=\"http://weibo.com/u/2788354117\" target=\"_blank\" rel=\"external\">@马克飞象</a>，<a href=\"http://weibo.com/ggock\" title=\"开发者个人账号\" target=\"_blank\" rel=\"external\">@GGock</a></li>\n<li>邮箱：<a href=\"&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></li>\n</ul>\n<hr>\n<p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p>\n<p>[^demo]: 这是一个示例脚注。请查阅 <a href=\"https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes\" target=\"_blank\" rel=\"external\">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href=\"https://dev.yinxiang.com/doc/articles/enml.php\" target=\"_blank\" rel=\"external\">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。</p>\n","excerpt":"<p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p>\n<ul>\n<li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li>\n<li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href=\"http://maxiang.info/client_zh\">桌面客户端</a>以及<a href=\"https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop\">离线Chrome App</a>，支持移动端 Web；</li>\n<li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li>\n</ul>\n<hr>","more":"<p>[TOC]</p>\n<h2 id=\"Markdown简介\"><a href=\"#Markdown简介\" class=\"headerlink\" title=\"Markdown简介\"></a>Markdown简介</h2><blockquote>\n<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href=\"https://zh.wikipedia.org/wiki/Markdown\">维基百科</a></p>\n</blockquote>\n<p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href=\"http://www.example.com\">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。 </p>\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><pre><code class=\"python\">@requires_authorization\ndef somefunc(param1=&#39;&#39;, param2=0):\n    &#39;&#39;&#39;A docstring&#39;&#39;&#39;\n    if param1 &gt; param2: # interesting\n        print &#39;Greater&#39;\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n&gt;&gt;&gt; message = &#39;&#39;&#39;interpreter\n... prompt&#39;&#39;&#39;\n</code></pre>\n<h3 id=\"LaTeX-公式\"><a href=\"#LaTeX-公式\" class=\"headerlink\" title=\"LaTeX 公式\"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式：</p>\n<p>$$    x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Item</th>\n<th style=\"text-align:right\">Value</th>\n<th style=\"text-align:center\">Qty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Computer</td>\n<td style=\"text-align:right\">1600 USD</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Phone</td>\n<td style=\"text-align:right\">12 USD</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Pipe</td>\n<td style=\"text-align:right\">1 USD</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><pre><code class=\"flow\">st=&gt;start: Start\ne=&gt;end\nop=&gt;operation: My Operation\ncond=&gt;condition: Yes or No?\n\nst-&gt;op-&gt;cond\ncond(yes)-&gt;e\ncond(no)-&gt;op\n</code></pre>\n<p>以及时序图:</p>\n<pre><code class=\"sequence\">Alice-&gt;Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob--&gt;Alice: I am good thanks!\n</code></pre>\n<blockquote>\n<p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href=\"http://adrai.github.io/flowchart.js/\">语法</a>以及<strong>时序图</strong><a href=\"http://bramp.github.io/js-sequence-diagrams/\">语法</a>。</p>\n</blockquote>\n<h3 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p>\n<ul>\n<li>[x] 已完成事项</li>\n<li>[ ] 待办事项1</li>\n<li>[ ] 待办事项2</li>\n</ul>\n<blockquote>\n<p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p>\n</blockquote>\n<h2 id=\"印象笔记相关\"><a href=\"#印象笔记相关\" class=\"headerlink\" title=\"印象笔记相关\"></a>印象笔记相关</h2><h3 id=\"笔记本和标签\"><a href=\"#笔记本和标签\" class=\"headerlink\" title=\"笔记本和标签\"></a>笔记本和标签</h3><p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p>\n<h3 id=\"笔记标题\"><a href=\"#笔记标题\" class=\"headerlink\" title=\"笔记标题\"></a>笔记标题</h3><p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p>\n<h3 id=\"快捷编辑\"><a href=\"#快捷编辑\" class=\"headerlink\" title=\"快捷编辑\"></a>快捷编辑</h3><p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p>\n<blockquote>\n<p><strong>注意：</strong>目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p>\n</blockquote>\n<h3 id=\"数据同步\"><a href=\"#数据同步\" class=\"headerlink\" title=\"数据同步\"></a>数据同步</h3><p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p>\n<blockquote>\n<p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p>\n</blockquote>\n<h3 id=\"离线存储\"><a href=\"#离线存储\" class=\"headerlink\" title=\"离线存储\"></a>离线存储</h3><p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p>\n<blockquote>\n<p><strong>注意：</strong>虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p>\n</blockquote>\n<h2 id=\"编辑器相关\"><a href=\"#编辑器相关\" class=\"headerlink\" title=\"编辑器相关\"></a>编辑器相关</h2><h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><p>右侧系统菜单（快捷键<code>Ctrl + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p>\n<h3 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h3><p>帮助    <code>Ctrl + /</code><br>同步文档    <code>Ctrl + S</code><br>创建文档    <code>Ctrl + Alt + N</code><br>最大化编辑器    <code>Ctrl + Enter</code><br>预览文档 <code>Ctrl + Alt + Enter</code><br>文档管理    <code>Ctrl + O</code><br>系统菜单    <code>Ctrl + M</code> </p>\n<p>加粗    <code>Ctrl + B</code><br>插入图片    <code>Ctrl + G</code><br>插入链接    <code>Ctrl + L</code><br>提升标题    <code>Ctrl + H</code></p>\n<h2 id=\"关于收费\"><a href=\"#关于收费\" class=\"headerlink\" title=\"关于收费\"></a>关于收费</h2><p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href=\"maxiang.info/vip.html\">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p>\n<h2 id=\"反馈与建议\"><a href=\"#反馈与建议\" class=\"headerlink\" title=\"反馈与建议\"></a>反馈与建议</h2><ul>\n<li>微博：<a href=\"http://weibo.com/u/2788354117\">@马克飞象</a>，<a href=\"http://weibo.com/ggock\" title=\"开发者个人账号\">@GGock</a></li>\n<li>邮箱：<a href=\"&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></li>\n</ul>\n<hr>\n<p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p>\n<p>[^demo]: 这是一个示例脚注。请查阅 <a href=\"https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes\">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href=\"https://dev.yinxiang.com/doc/articles/enml.php\">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cizwsoeq10008wvt723k8drmu","category_id":"cizwsoepk0004wvt74yopr75n","_id":"cizwsoeqe000dwvt78ctdxbts"},{"post_id":"cizwsoep20000wvt714w4s06m","category_id":"cizwsoepk0004wvt74yopr75n","_id":"cizwsoeqh000gwvt7qsdax7nz"},{"post_id":"cizwsoepf0002wvt7aqpfoow8","category_id":"cizwsoepk0004wvt74yopr75n","_id":"cizwsoeqh000iwvt7m6f6ia65"},{"post_id":"cizwsoepw0006wvt7baek296t","category_id":"cizwsoepk0004wvt74yopr75n","_id":"cizwsoeqj000lwvt7w8ryfqcr"}],"PostTag":[{"post_id":"cizwsoep20000wvt714w4s06m","tag_id":"cizwsoepu0005wvt7dd347n6h","_id":"cizwsoeqb000cwvt7i01d06tm"},{"post_id":"cizwsoepf0002wvt7aqpfoow8","tag_id":"cizwsoeq9000bwvt7vyfgjl1q","_id":"cizwsoeqh000hwvt7sqghukb3"},{"post_id":"cizwsoepw0006wvt7baek296t","tag_id":"cizwsoeqg000fwvt7z4rklcqt","_id":"cizwsoeqi000kwvt7ldeho3ew"},{"post_id":"cizwsoeq10008wvt723k8drmu","tag_id":"cizwsoeqi000jwvt7e8rrzzk4","_id":"cizwsoeqk000nwvt7kvtvycwb"},{"post_id":"cizwsoeq70009wvt7c1zpac25","tag_id":"cizwsoeqj000mwvt7ivhiwrd2","_id":"cizwsoeqm000owvt73ri5hcbu"}],"Tag":[{"name":"hexo代码高亮","_id":"cizwsoepu0005wvt7dd347n6h"},{"name":"hexo","_id":"cizwsoeq9000bwvt7vyfgjl1q"},{"name":"hexo自动化","_id":"cizwsoeqg000fwvt7z4rklcqt"},{"name":"hexo配置","_id":"cizwsoeqi000jwvt7e8rrzzk4"},{"name":"markdown","_id":"cizwsoeqj000mwvt7ivhiwrd2"}]}}